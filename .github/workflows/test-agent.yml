# Copyright 2020 New Relic Corporation. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

name: test-pull-request

#
# Controls when the action will run. 
#
on:
  #
  # Triggers the workflow on push or pull request events but only for listed branches
  #
  push:
    branches: 
      - main
      - 'dev'
      - 'ci/integration-tests'
  pull_request:
    branches: 
      - main
      - 'dev'
      - 'oapi'
jobs:
  daemon-unit-tests:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-go
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
    steps:
      - name: Checkout newrelic-php-agent code
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Enable arm64 emulation
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:${{vars.BINFMT_IMAGE_VERSION}}
          platforms: arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build daemon
        if: ${{ matrix.arch == 'amd64' }}
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          -e ACCOUNT_supportability=${{secrets.ACCOUNT_SUPPORTABILITY}}
          -e APP_supportability=${{secrets.APP_SUPPORTABILITY}}
          $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION daemon
      # - name: Run daemon tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION daemon_test
      - name: Save integration_runner for integration tests
        uses: actions/upload-artifact@v3
        with:
          name: integration_runner-${{matrix.platform}}-${{matrix.arch}}
          path: php-agent/bin/integration_runner
  agent-unit-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-php
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
        php: ['5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        exclude:
          - arch: arm64
            php: '5.5'
          - arch: arm64
            php: '5.6'
          - arch: arm64
            php: '7.0'
          - arch: arm64
            php: '7.1'
          - arch: arm64
            php: '7.2'
          - arch: arm64
            php: '7.3'
          - arch: arm64
            php: '7.4'
          - php: '5.5'
          - php: '5.6'
          - php: '7.0'
          - php: '7.1'
          - php: '7.2'
          - php: '7.3'
          - php: '7.4'
          - php: '8.0'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Enable arm64 emulation
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Determine if valgrind can be used
        id: get-check-variant
        run: |
          if [[ ${{ matrix.platform }} = 'gnu' && ${{matrix.arch}} = 'amd64' ]]; then
            echo "AXIOM_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          else
            echo "AXIOM_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          fi
          if [[ ${{matrix.arch}} = 'arm64' ]]; then
            echo "AGENT_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          elif [[ ${{ matrix.platform }} = 'gnu' ]]; then
            echo "AGENT_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          elif [[ ${{matrix.php}} = '5.5' || ${{matrix.php}} = '5.6' || ${{matrix.php}} = '7.0' || ${{matrix.php}} = '7.1' ]]; then
            echo "AGENT_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          else 
            echo "AGENT_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          fi
      - name: Build axiom
        if: ${{ matrix.arch == 'amd64' }}
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION axiom 
      - name: Build agent
        if: ${{ matrix.arch == 'amd64' }}
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION agent
      # - name: Build axiom unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION axiom-tests
      # - name: Run axiom unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION axiom-${{ steps.get-check-variant.outputs.AXIOM_CHECK_VARIANT }}
      # - name: Build agent unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION agent-tests
      # - name: Run agent unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION agent-${{ steps.get-check-variant.outputs.AGENT_CHECK_VARIANT }}
      - name: Save newrelic.so for integration tests
        uses: actions/upload-artifact@v3
        with:
          name: newrelic.so-${{matrix.platform}}-${{matrix.arch}}-${{matrix.php}}
          path: php-agent/agent/modules/newrelic.so
  integration-tests:
    needs: [daemon-unit-tests, agent-unit-test]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-php
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
        php: ['5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        exclude:
          - arch: arm64
            php: '5.5'
          - arch: arm64
            php: '5.6'
          - arch: arm64
            php: '7.0'
          - arch: arm64
            php: '7.1'
          - arch: arm64
            php: '7.2'
          - arch: arm64
            php: '7.3'
          - arch: arm64
            php: '7.4'
          - php: '5.5'
          - php: '5.6'
          - php: '7.0'
          - php: '7.1'
          - php: '7.2'
          - php: '7.3'
          - php: '7.4'
          - php: '8.0'
    steps:
      - name: Checkout integration tests
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Get integration_runner
        if: ${{ matrix.arch == 'amd64' }}
        uses: actions/download-artifact@v3
        with:
          name: integration_runner-${{matrix.platform}}-${{matrix.arch}}
          path: php-agent/bin
      - name: Get newrelic.so
        if: ${{ matrix.arch == 'amd64' }}
        uses: actions/download-artifact@v3
        with:
          name: newrelic.so-${{matrix.platform}}-${{matrix.arch}}-${{matrix.php}}
          path: php-agent/agent/modules
      - name: Prep artifacts for use
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          ls -l php-agent/bin/
          chmod 755 php-agent/bin/integration_runner
          ls -l php-agent/bin/
          ls -l php-agent/agent/modules
          chmod 755 php-agent/agent/modules/newrelic.so
          ls -l php-agent/agent/modules
      - name: Enable arm64 emulation
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:${{vars.BINFMT_IMAGE_VERSION}}
          platforms: arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Start php service
        run: |
          docker create --name php-${{matrix.php}}-${{matrix.platform}} -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" --entrypoint tail $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION "-f" "/dev/null"
          docker start php-${{matrix.php}}-${{matrix.platform}}
      # - name: Run integration tests - api
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/api"
      # - name: Run integration tests - attributes
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/attributes"
      # - name: Run integration tests - basic
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/basic"
      # - name: Run integration tests - distributed_tracing
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/distributed_tracing"
      # - name: Run integration tests - errors
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/errors"
      # - name: Run integration tests - events
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/events"
      # - name: Run integration tests - external
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/external"
      # - name: Run integration tests - frameworks
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/frameworks"
      # - name: Run integration tests - ini
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/ini"
      # - name: Run integration tests - lang
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/lang"
      # - name: Run integration tests - logging
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/logging"
#
# BEGIN ======= these tests require additional extensions and additional services
#
      # - name: Run integration tests - memcache
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/memcache"
      # - name: Run integration tests - memcached
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/memcached"
      # - name: Run integration tests - mongo
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/mongo"
      # - name: Run integration tests - mysql
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/mysql"
      # - name: Run integration tests - mysqli
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/mysqli"
      # - name: Run integration tests - output
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/output"
      # - name: Run integration tests - pdo
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/pdo"
      # - name: Run integration tests - pgsql
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/pgsql"
      # - name: Run integration tests - predis
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: |
      #     docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/predis"
#
# END ======= these tests require additional extensions and additional services
#
      - name: Run integration tests - queue
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/queue"
      - name: Run integration tests - redis
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/redis"
      - name: Run integration tests - span_events
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/span_events"
      - name: Run integration tests - sqlite
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/sqlite"
      - name: Run integration tests - sqlite3
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/sqlite3"
      - name: Run integration tests - sqlitedatabase
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/sqlitedatabase"
      - name: Run integration tests - synthetics
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/synthetics"
      - name: Run integration tests - uopz
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          docker exec php-${{matrix.php}}-${{matrix.platform}} sh -c "./bin/integration_runner -agent agent/modules/newrelic.so -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} tests/integration/uopz"
      - name: Stop services
        if: always()
        run: docker rm --force php-${{matrix.php}}-${{matrix.platform}}
