# Copyright 2020 New Relic Corporation. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

name: test-pull-request

#
# Controls when the action will run. 
#
on:
  #
  # Triggers the workflow on push or pull request events but only for listed branches
  #
  push:
    branches: 
      - main
      - 'dev'
      - 'ci/integration-tests'
  pull_request:
    branches: 
      - main
      - 'dev'
      - 'oapi'
jobs:
  daemon-unit-tests:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-go
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
    steps:
      - name: Checkout newrelic-php-agent code
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Enable arm64 emulation
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:${{vars.BINFMT_IMAGE_VERSION}}
          platforms: arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build daemon
        if: ${{ matrix.arch == 'amd64' }}
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          -e ACCOUNT_supportability=${{secrets.ACCOUNT_SUPPORTABILITY}}
          -e APP_supportability=${{secrets.APP_SUPPORTABILITY}}
          $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION daemon
      # - name: Run daemon tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{ matrix.platform }}-$IMAGE_VERSION daemon_test
      - name: Save integration_runner for integration tests
        uses: actions/upload-artifact@v3
        with:
          name: integration_runner-${{matrix.platform}}-${{matrix.arch}}
          path: php-agent/bin/integration_runner
  agent-unit-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-php
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
        php: ['5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        exclude:
          - arch: arm64
            php: '5.5'
          - arch: arm64
            php: '5.6'
          - arch: arm64
            php: '7.0'
          - arch: arm64
            php: '7.1'
          - arch: arm64
            php: '7.2'
          - arch: arm64
            php: '7.3'
          - arch: arm64
            php: '7.4'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Enable arm64 emulation
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Determine if valgrind can be used
        id: get-check-variant
        run: |
          if [[ ${{ matrix.platform }} = 'gnu' && ${{matrix.arch}} = 'amd64' ]]; then
            echo "AXIOM_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          else
            echo "AXIOM_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          fi
          if [[ ${{matrix.arch}} = 'arm64' ]]; then
            echo "AGENT_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          elif [[ ${{ matrix.platform }} = 'gnu' ]]; then
            echo "AGENT_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          elif [[ ${{matrix.php}} = '5.5' || ${{matrix.php}} = '5.6' || ${{matrix.php}} = '7.0' || ${{matrix.php}} = '7.1' ]]; then
            echo "AGENT_CHECK_VARIANT=check" >> $GITHUB_OUTPUT
          else 
            echo "AGENT_CHECK_VARIANT=valgrind" >> $GITHUB_OUTPUT
          fi
      - name: Build axiom
        if: ${{ matrix.arch == 'amd64' }}
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION axiom 
      - name: Build agent
        if: ${{ matrix.arch == 'amd64' }}
        run: >
          docker run --rm --platform linux/${{matrix.arch}}
          -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
          $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION agent
      # - name: Build axiom unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION axiom-tests
      # - name: Run axiom unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION axiom-${{ steps.get-check-variant.outputs.AXIOM_CHECK_VARIANT }}
      # - name: Build agent unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION agent-tests
      # - name: Run agent unit tests
      #   if: ${{ matrix.arch == 'amd64' }}
      #   run: >
      #     docker run --rm --platform linux/${{matrix.arch}}
      #     -v "${GITHUB_WORKSPACE}/php-agent":"/usr/local/src/newrelic-php-agent" 
      #     $IMAGE_NAME:$IMAGE_TAG-${{matrix.php}}-${{matrix.platform}}-$IMAGE_VERSION agent-${{ steps.get-check-variant.outputs.AGENT_CHECK_VARIANT }}
      - name: Save newrelic.so for integration tests
        uses: actions/upload-artifact@v3
        with:
          name: newrelic.so-${{matrix.platform}}-${{matrix.arch}}-${{matrix.php}}
          path: php-agent/agent/modules/newrelic.so
  integration-tests:
    needs: [daemon-unit-tests, agent-unit-test]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: newrelic/nr-php-agent-builder
      IMAGE_TAG: make-php
      IMAGE_VERSION: v1
    strategy:
      matrix:
        platform: [gnu, musl]
        arch: [amd64, arm64]
        php: ['5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2']
        exclude:
          - arch: arm64
            php: '5.5'
          - arch: arm64
            php: '5.6'
          - arch: arm64
            php: '7.0'
          - arch: arm64
            php: '7.1'
          - arch: arm64
            php: '7.2'
          - arch: arm64
            php: '7.3'
          - arch: arm64
            php: '7.4'
    steps:
      - name: Checkout integration tests
        uses: actions/checkout@v3
        with:
          path: php-agent
      - name: Get integration_runner
        if: ${{ matrix.arch == 'amd64' }}
        uses: actions/download-artifact@v3
        with:
          name: integration_runner-${{matrix.platform}}-${{matrix.arch}}
          path: php-agent/bin
      - name: Get newrelic.so
        if: ${{ matrix.arch == 'amd64' }}
        uses: actions/download-artifact@v3
        with:
          name: newrelic.so-${{matrix.platform}}-${{matrix.arch}}-${{matrix.php}}
          path: php-agent/agent/modules
      - name: Prep artifacts for use
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          ls -l php-agent/bin/
          chmod 755 php-agent/bin/integration_runner
          ls -l php-agent/bin/
          ls -l php-agent/agent/modules
          chmod 755 php-agent/agent/modules/newrelic.so
          ls -l php-agent/agent/modules
      - name: Enable arm64 emulation
        if: ${{ matrix.arch == 'arm64' }}
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:${{vars.BINFMT_IMAGE_VERSION}}
          platforms: arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Start services
        if: ${{ matrix.arch == 'amd64' }}
        env:
          PHP: ${{matrix.php}}
          LIBC: ${{matrix.platform}}
          PLATFORM: linux/${{matrix.arch}}
          AGENT_CODE: ${{github.workspace}}/php-agent
        working-directory: ./php-agent
        run: |
          make test-services-start SERVICES="php mysqldb"
      - name: Test slow sql
        if: ${{ matrix.arch == 'amd64' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/pdo/test_slow_sql_1.php81.php
      - name: Test events limits
        if: ${{ matrix.arch == 'amd64' }}
        env:
          NR_TEST_LICENSE: ${{secrets.NR_TEST_LICENSE}}
          NR_COLLECTOR_HOST: ${{secrets.NR_COLLECTOR_HOST}}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec php make custom-limits-tests INTEGRATION_ARGS="-license $NR_TEST_LICENSE -collector $NR_COLLECTOR_HOST -agent agent/modules/newrelic.so"
      - name: Test LASP
        if: ${{ matrix.arch == 'amd64' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          -e PHPS=${{matrix.php}} \
          -e LICENSE_lasp_suite_most_secure=${{secrets.LICENSE_LASP_SUITE_MOST_SECURE}} \
          -e LICENSE_lasp_suite_least_secure=${{secrets.LICENSE_LASP_SUITE_LEAST_SECURE}} \
          -e LICENSE_lasp_suite_random_1=${{secrets.LICENSE_LASP_SUITE_RANDOM_1}} \
          -e LICENSE_lasp_suite_random_2=${{secrets.LICENSE_LASP_SUITE_RANDOM_2}} \
          -e LICENSE_lasp_suite_random_3=${{secrets.LICENSE_LASP_SUITE_RANDOM_3}} \
          -e INTEGRATION_ARGS="-license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so" \
          php make lasp-test-all
      - name: Run integration tests - api
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          -e ACCOUNT_supportability_trusted=${{secrets.ACCOUNT_SUPPORTABILITY_TRUSTED}} \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/api
      - name: Run integration tests - attributes
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/attributes
      - name: Run integration tests - basic
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/basic
      - name: Run integration tests - distributed_tracing
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          -e APP_supportability=${{secrets.APP_SUPPORTABILITY}} \
          -e ACCOUNT_supportability=${{secrets.ACCOUNT_SUPPORTABILITY}} \
          -e ACCOUNT_supportability_trusted=${{secrets.ACCOUNT_SUPPORTABILITY_TRUSTED}} \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/distributed_tracing
      - name: Run integration tests - errors
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/errors
      - name: Run integration tests - events
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/events
      - name: Run integration tests - external
        if: ${{ matrix.arch == 'amd64' && matrix.platform == 'gnu' }}
        working-directory: ./php-agent
        shell: bash
        run: |
          docker exec \
          -e APP_supportability=${{secrets.APP_SUPPORTABILITY}} \
          -e ACCOUNT_supportability=${{secrets.ACCOUNT_SUPPORTABILITY}} \
          -e SYNTHETICS_HEADER_supportability=${{secrets.SYNTHETICS_HEADER_SUPPORTABILITY}} \
          php bin/integration_runner -license ${{secrets.NR_TEST_LICENSE}} -collector ${{secrets.NR_COLLECTOR_HOST}} -agent agent/modules/newrelic.so \
            tests/integration/external
      - name: Stop services
        if: ${{ matrix.arch == 'amd64' }}
        env:
          PHP: ${{matrix.php}}
          LIBC: ${{matrix.platform}}
          AGENT_CODE: ${{github.workspace}}/php-agent
        working-directory: ./php-agent
        run: |
          make test-services-stop
