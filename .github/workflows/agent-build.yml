# Copyright 2020 New Relic Corporation. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

#
# This is the workflow to do a PR build.
#

name: agent-build

#
# Controls when the action will run. 
#
on:
  #
  # Triggers the workflow on push or pull request events but only for the main branch
  #
  push:
    branches: 
      - main
      - 'php8'
      - 'dev'
      - arm64
  pull_request:
    branches: 
      - main
      - 'php8'
      - 'dev'

jobs:
  agent_pr:
    env:
      PHP_VER: ${{ matrix.php_ver }}
      ARCH: ${{ matrix.arch }}
      BUILD_TYPE: pr
      OS: ${{ matrix.os }}
      image_name: ${{ matrix.os }}:${{ matrix.php_ver }}${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        #php_ver: ['7.0', '7.1-zts', '7.2', '7.3', '7.4', '8.0', '8.0-zts', '8.1', '8.1-zts']
        php_ver: ['7.4']
        arch: ['arm64', 'amd64']
        exclude:
        # Excludes PHP 5.x, 7.x on linux 32-bit
        # Excludes PHP 8.x as only 64bit is supported for these versions
        - os: linux
          php_ver: '7.0'
          arch: 'x86'
        - os: linux
          php_ver: '7.1-zts'
          arch: 'x86'
        - os: linux
          php_ver: '7.2'
          arch: 'x86'
        - os: linux
          php_ver: '7.3'
          arch: 'x86'
        - os: linux
          php_ver: '7.4'
          arch: 'x86'
        - os: linux
          php_ver: '8.0'
          arch: 'x86'
        - os: linux
          php_ver: '8.0-zts'
          arch: 'x86'
        - os: linux
          php_ver: '8.1'
          arch: 'x86'
        - os: linux
          php_ver: '8.1-zts'
          arch: 'x86'
    steps:
      - name: Checkout Repo 
        uses: actions/checkout@v2
      - name: Enable arm64 emulation
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64
          ls -l /proc/sys/fs/binfmt_misc/
          docker run --platform linux/$ARCH --rm alpine uname -a
      - name: Build Custom Docker Image
        run: docker build --platform linux/$ARCH --build-arg ARCH=$ARCH --build-arg PHP_VER=$PHP_VER --build-arg BUILD_TYPE=$BUILD_TYPE -f ./.github/docker/${OS}/Dockerfile -t $image_name .
      - name: Build and Test
        run: docker run --platform linux/$ARCH --name runtest --workdir /github/workspace --rm -e GITHUB_WORKSPACE -e GITHUB_ENV -v "${GITHUB_WORKSPACE}":"/github/workspace" $image_name
